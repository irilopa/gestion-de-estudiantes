{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inicio","text":"<p>Bienvenido a la documentaci\u00f3n del Sistema de Gesti\u00f3n de Estudiantes.</p>"},{"location":"#sistema-de-gestion-academica-estudiantil","title":"Sistema de Gesti\u00f3n Acad\u00e9mica Estudiantil","text":""},{"location":"#descripcion-general","title":"Descripci\u00f3n General","text":"<p>Este sistema es una aplicaci\u00f3n de consola desarrollada en Java, orientada a la gesti\u00f3n acad\u00e9mica de estudiantes, cursos y calificaciones. Utiliza MySQL como base de datos principal y MongoDB para el registro de logs de operaciones relevantes.</p>"},{"location":"#objetivos-del-sistema","title":"Objetivos del Sistema","text":"<ol> <li>Gestionar registros acad\u00e9micos de estudiantes y cursos</li> <li>Facilitar el seguimiento del rendimiento estudiantil</li> <li>Optimizar procesos administrativos educativos</li> <li>Generar an\u00e1lisis estad\u00edsticos precisos</li> </ol>"},{"location":"#especificaciones-tecnicas","title":"Especificaciones T\u00e9cnicas","text":"<ul> <li>Lenguaje: Java 21</li> <li>Base de Datos: MySQL 8+</li> <li>Logging: MongoDB (solo para logs)</li> <li>Arquitectura: Patr\u00f3n DAO, JDBC</li> </ul>"},{"location":"#referencias-tecnicas","title":"Referencias T\u00e9cnicas","text":"<ul> <li>IEEE 829-2008 Standard for Software Test Documentation</li> <li>ISO/IEC 25010:2011 Systems and software Quality Requirements</li> </ul>"},{"location":"instalacion/","title":"Gu\u00eda de Instalaci\u00f3n","text":""},{"location":"instalacion/#requisitos-previos","title":"Requisitos Previos","text":""},{"location":"instalacion/#software-necesario","title":"Software Necesario","text":"<ul> <li>Java JDK 21 o superior</li> <li>MySQL 8.0 o superior</li> <li>MongoDB (para logging)</li> <li>Maven 3.8 o superior</li> </ul>"},{"location":"instalacion/#bases-de-datos","title":"Bases de Datos","text":"<ol> <li> <p>MySQL <pre><code>CREATE DATABASE highschool;\nCREATE USER 'gestionapp'@'localhost' IDENTIFIED BY 'tu_contrase\u00f1a';\nGRANT ALL PRIVILEGES ON highschool.* TO 'gestionapp'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre></p> </li> <li> <p>MongoDB <pre><code>use application_logs\ndb.createUser({\n  user: \"appLogger\",\n  pwd: \"tu_contrase\u00f1a_segura\",\n  roles: [{ role: \"readWrite\", db: \"application_logs\" }]\n})\n</code></pre></p> </li> </ol>"},{"location":"instalacion/#pasos-de-instalacion","title":"Pasos de Instalaci\u00f3n","text":"<ol> <li> <p>Clonar el Repositorio <pre><code>git clone &lt;url-del-repo&gt;\ncd gestion-de-estudiantes\n</code></pre></p> </li> <li> <p>Configurar la Base de Datos</p> </li> <li>Ejecutar el script de inicializaci\u00f3n:      <pre><code>mysql -u root -p highschool &lt; src/main/resources/highschool.sql\n</code></pre></li> <li>Modificar credenciales en <code>src/main/java/org/ivan/util/DatabaseConnection.java</code></li> <li> <p>Modificar credenciales en <code>src/main/java/org/ivan/util/MongoLogger.java</code></p> </li> <li> <p>Compilar el Proyecto <pre><code>mvn clean install\n</code></pre></p> </li> <li> <p>Ejecutar la Aplicaci\u00f3n <pre><code>mvn exec:java -Dexec.mainClass=\"org.ivan.Main\"\n</code></pre></p> </li> </ol>"},{"location":"instalacion/#verificacion-de-la-instalacion","title":"Verificaci\u00f3n de la Instalaci\u00f3n","text":"<ol> <li>La aplicaci\u00f3n deber\u00eda mostrar el men\u00fa principal</li> <li>Verificar conexi\u00f3n a MySQL intentando listar estudiantes</li> <li>Verificar logs en MongoDB:    <pre><code>use application_logs\ndb.logs.find()\n</code></pre></li> </ol>"},{"location":"instalacion/#solucion-de-problemas","title":"Soluci\u00f3n de Problemas","text":""},{"location":"instalacion/#errores-comunes","title":"Errores Comunes","text":"<ol> <li>Error de conexi\u00f3n a MySQL</li> <li>Verificar que el servicio MySQL est\u00e9 corriendo</li> <li>Comprobar credenciales en DatabaseConnection.java</li> <li> <p>Verificar que la base de datos existe</p> </li> <li> <p>Error de conexi\u00f3n a MongoDB</p> </li> <li>Verificar que el servicio MongoDB est\u00e9 corriendo</li> <li>Comprobar credenciales en MongoLogger.java</li> <li>Verificar que el usuario tiene permisos correctos</li> </ol>"},{"location":"licencia/","title":"Licencia MIT","text":"<p>Copyright (c) 2024 Sistema de Gesti\u00f3n de Estudiantes</p> <p>Por la presente se concede permiso, libre de cargos, a cualquier persona que obtenga una copia de este software y de los archivos de documentaci\u00f3n asociados (el \"Software\"), a utilizar el Software sin restricci\u00f3n, incluyendo sin limitaci\u00f3n los derechos a usar, copiar, modificar, fusionar, publicar, distribuir, sublicenciar, y/o vender copias del Software, y a permitir a las personas a las que se les proporcione el Software a hacer lo mismo, sujeto a las siguientes condiciones:</p> <p>El aviso de copyright anterior y este aviso de permiso se incluir\u00e1n en todas las copias o partes sustanciales del Software.</p> <p>EL SOFTWARE SE PROPORCIONA \"COMO EST\u00c1\", SIN GARANT\u00cdA DE NING\u00daN TIPO, EXPRESA O IMPL\u00cdCITA, INCLUYENDO PERO NO LIMITADO A GARANT\u00cdAS DE COMERCIALIZACI\u00d3N, IDONEIDAD PARA UN PROP\u00d3SITO PARTICULAR Y NO INFRACCI\u00d3N. EN NING\u00daN CASO LOS AUTORES O TITULARES DEL COPYRIGHT SER\u00c1N RESPONSABLES DE NINGUNA RECLAMACI\u00d3N, DA\u00d1OS U OTRAS RESPONSABILIDADES, YA SEA EN UNA ACCI\u00d3N DE CONTRATO, AGRAVIO O CUALQUIER OTRO MOTIVO, QUE SURJA DE O EN CONEXI\u00d3N CON EL SOFTWARE O EL USO U OTRO TIPO DE ACCIONES EN EL SOFTWARE.</p>"},{"location":"licencia/#bibliotecas-de-terceros","title":"Bibliotecas de Terceros","text":"<p>Este proyecto utiliza las siguientes bibliotecas, cada una con su propia licencia:</p> <ul> <li>MySQL Connector/J (GPL 2.0 con FOSS Exception)</li> <li>Lombok (MIT License)</li> <li>MongoDB Java Driver (Apache License 2.0)</li> </ul>"},{"location":"mongo/","title":"Configuraci\u00f3n MongoDB","text":""},{"location":"mongo/#usuario-recomendado","title":"Usuario recomendado","text":"<p>No uses el usuario <code>root</code> para la aplicaci\u00f3n. Crea un usuario espec\u00edfico solo con permisos sobre la base de datos de logs:</p> <pre><code>use application_logs\ndb.createUser({\n  user: \"appLogger\",\n  pwd: \"una_contrase\u00f1a_segura\",\n  roles: [{ role: \"readWrite\", db: \"application_logs\" }]\n})\n</code></pre>"},{"location":"mongo/#configuracion-en-el-codigo","title":"Configuraci\u00f3n en el c\u00f3digo","text":"<p>En <code>MongoLogger.java</code>:</p> <pre><code>private static final String URI = \"mongodb://appLogger:una_contrase\u00f1a_segura@localhost:27017/?authSource=application_logs\";\n</code></pre>"},{"location":"mongo/#logs","title":"Logs","text":"<p>Cada operaci\u00f3n relevante genera un documento en la colecci\u00f3n <code>logs</code> de la base <code>application_logs</code>.</p>"},{"location":"mongo/#mongodb-atlas","title":"MongoDB Atlas","text":"<p>Si usas Atlas, usa la URI proporcionada por la plataforma y aseg\u00farate de que el usuario tenga permisos sobre la base de datos de logs.</p>"},{"location":"troubleshooting/","title":"Soluci\u00f3n de Problemas","text":"<p>Consejo</p> <p>Antes de reportar un problema, aseg\u00farese de revisar esta gu\u00eda y verificar que est\u00e1 utilizando las versiones correctas de todas las dependencias.</p>"},{"location":"troubleshooting/#problemas-comunes","title":"Problemas Comunes","text":""},{"location":"troubleshooting/#1-errores-de-conexion-a-mysql","title":"1. Errores de Conexi\u00f3n a MySQL","text":"Error: Communications link failure <p>Problema: No se puede establecer conexi\u00f3n con MySQL.</p> <p>Soluciones:</p> <ol> <li> <p>Verificar que MySQL est\u00e1 en ejecuci\u00f3n:    <pre><code>Get-Service MySQL*\n</code></pre></p> </li> <li> <p>Comprobar credenciales en <code>DatabaseConnection.java</code>:    <pre><code>private static final String URL = \"jdbc:mysql://localhost:3306/highschool\";\nprivate static final String USER = \"root\";\nprivate static final String PASSWORD = \"tu_password\";\n</code></pre></p> </li> <li> <p>Verificar que el puerto 3306 est\u00e1 disponible:    <pre><code>Test-NetConnection -ComputerName localhost -Port 3306\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting/#2-errores-de-mongodb","title":"2. Errores de MongoDB","text":"Error: MongoTimeoutException <p>Problema: No se puede conectar a MongoDB para los logs.</p> <p>Soluciones:</p> <ol> <li> <p>Verificar que MongoDB est\u00e1 en ejecuci\u00f3n:    <pre><code>Get-Service MongoDB*\n</code></pre></p> </li> <li> <p>Comprobar credenciales en <code>MongoLogger.java</code></p> </li> <li> <p>Verificar que el usuario tiene permisos:    <pre><code>use application_logs\ndb.getUser(\"appLogger\")\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting/#3-errores-de-java","title":"3. Errores de Java","text":"Error: ClassNotFoundException <p>Problema: No se encuentran las clases necesarias.</p> <p>Soluciones:</p> <ol> <li> <p>Limpiar y recompilar el proyecto:    <pre><code>mvn clean install\n</code></pre></p> </li> <li> <p>Verificar la versi\u00f3n de Java:    <pre><code>java -version\n</code></pre></p> </li> </ol>"},{"location":"troubleshooting/#4-errores-de-datos","title":"4. Errores de Datos","text":"Error: Duplicate entry for key 'PRIMARY' <p>Problema: Intento de insertar un registro con una clave primaria duplicada.</p> <p>Soluciones:</p> <ol> <li>Verificar si el estudiante ya existe</li> <li>Usar la opci\u00f3n de modificar en lugar de insertar</li> <li>Verificar la unicidad del NIF antes de insertar</li> </ol>"},{"location":"troubleshooting/#mantenimiento-preventivo","title":"Mantenimiento Preventivo","text":"<ol> <li> <p>Backup Regular <pre><code># Backup de MySQL\nmysqldump -u root -p highschool &gt; backup_$(Get-Date -Format \"yyyy-MM-dd\").sql\n\n# Backup de logs MongoDB\nmongodump --db application_logs --out backup_$(Get-Date -Format \"yyyy-MM-dd\")\n</code></pre></p> </li> <li> <p>Limpieza de Logs</p> </li> <li>Eliminar logs m\u00e1s antiguos de 30 d\u00edas</li> <li>Verificar espacio en disco regularmente</li> <li> <p>Mantener respaldo de logs importantes</p> </li> <li> <p>Verificaci\u00f3n de Integridad</p> </li> <li>Ejecutar verificaciones de tablas peri\u00f3dicamente</li> <li>Mantener \u00edndices optimizados</li> <li>Monitorear el rendimiento de las consultas</li> </ol>"},{"location":"troubleshooting/#contacto-de-soporte","title":"Contacto de Soporte","text":"<p>Si despu\u00e9s de seguir esta gu\u00eda sigue teniendo problemas:</p> <ol> <li>Revise los problemas conocidos</li> <li>Abra un nuevo issue con toda la informaci\u00f3n relevante</li> <li>Contacte al equipo de soporte: soporte@example.com</li> </ol>"},{"location":"uso/","title":"Gu\u00eda de Uso","text":"<p>Nota</p> <p>Las capturas de pantalla son ejemplos y pueden variar ligeramente seg\u00fan la versi\u00f3n del sistema.</p>"},{"location":"uso/#menu-principal","title":"Men\u00fa Principal","text":"<p>Al iniciar la aplicaci\u00f3n, se muestra el men\u00fa principal:</p> <pre><code>--- Sistema de Gesti\u00f3n Acad\u00e9mica ---\n1. Listar Estudiantes\n2. Insertar Estudiante\n3. Eliminar Estudiante\n4. Modificar Estudiante\n------------------------------------\n5. Listar Cursos\n6. Insertar Curso\n7. Eliminar Curso\n------------------------------------\n8. Mostrar Notas de Estudiante\n9. A\u00f1adir Nota\n0. Salir\n</code></pre>"},{"location":"uso/#ejemplos-de-uso","title":"Ejemplos de Uso","text":""},{"location":"uso/#1-gestion-de-estudiantes","title":"1. Gesti\u00f3n de Estudiantes","text":"Listar EstudiantesInsertar EstudianteModificar Estudiante <pre><code>--- Lista de Estudiantes ---\nStudent(nif=1X, name=Bob, surname=Esponja, zipCode=28000)\nStudent(nif=2X, name=Peppa, surname=Pig, zipCode=28001)\n</code></pre> <pre><code>NIF del estudiante: 3X\nNombre del estudiante: Juan\nApellidos del estudiante: P\u00e9rez\nC\u00f3digo Postal: 28002\nEstudiante insertado con \u00e9xito.\n</code></pre> <pre><code>NIF del estudiante a modificar: 3X\nEstudiante actual: Student(nif=3X, name=Juan, surname=P\u00e9rez, zipCode=28002)\nNuevo nombre (dejar en blanco para no modificar): Juan Jos\u00e9\nNuevos apellidos (dejar en blanco para no modificar): \nNuevo c\u00f3digo postal (0 para no modificar): 0\nEstudiante modificado con \u00e9xito.\n</code></pre>"},{"location":"uso/#2-gestion-de-cursos","title":"2. Gesti\u00f3n de Cursos","text":"Listar CursosInsertar Curso <pre><code>--- Lista de Cursos ---\nCourse(id=1, name=DAM, course_year=2024)\nCourse(id=2, name=DAW, course_year=2024)\n</code></pre> <pre><code>Nombre del curso: ASIR\nA\u00f1o del curso: 2024\nCurso insertado con \u00e9xito.\n</code></pre>"},{"location":"uso/#3-gestion-de-calificaciones","title":"3. Gesti\u00f3n de Calificaciones","text":"Mostrar NotasA\u00f1adir Nota <pre><code>NIF del estudiante para mostrar notas: 1X\n--- Notas del Estudiante 1X ---\nStudentGrade(nif=1X, courseId=1, grade=7.0)\nStudentGrade(nif=1X, courseId=2, grade=8.5)\n</code></pre> <pre><code>NIF del estudiante: 1X\nID del curso: 1\nValor de la nota (0.0-10.0): 9.5\nNota a\u00f1adida con \u00e9xito.\n</code></pre> <p>Consejo</p> <p>Siempre verifica los IDs de estudiantes y cursos antes de a\u00f1adir notas.</p>"},{"location":"uso/#mensajes-de-error-comunes","title":"Mensajes de Error Comunes","text":"<p>Error: Estudiante no encontrado</p> <pre><code>No se ha podido encontrar el estudiante.\n</code></pre> <p>Error: Nota inv\u00e1lida</p> <pre><code>La nota debe estar entre 0.0 y 10.0.\n</code></pre> <p>Error: Curso no encontrado</p> <pre><code>No se ha podido encontrar el curso.\n</code></pre>"},{"location":"uso/#operaciones-con-estudiantes","title":"Operaciones con Estudiantes","text":""},{"location":"uso/#insertar-estudiante","title":"Insertar Estudiante","text":"<ol> <li>Seleccionar opci\u00f3n 2</li> <li>Ingresar datos:</li> <li>NIF (formato v\u00e1lido, ej: \"12345678A\")</li> <li>Nombre</li> <li>Apellidos</li> <li>C\u00f3digo Postal (n\u00famero de 5 d\u00edgitos)</li> </ol> <p>Ejemplo: <pre><code>NIF del estudiante: 12345678A\nNombre del estudiante: Ana\nApellidos del estudiante: Garc\u00eda L\u00f3pez\nC\u00f3digo Postal: 28001\n</code></pre></p>"},{"location":"uso/#modificar-estudiante","title":"Modificar Estudiante","text":"<ol> <li>Seleccionar opci\u00f3n 4</li> <li>Ingresar NIF del estudiante</li> <li>Modificar los campos deseados (dejar en blanco para mantener valor actual)</li> </ol>"},{"location":"uso/#operaciones-con-cursos","title":"Operaciones con Cursos","text":""},{"location":"uso/#insertar-curso","title":"Insertar Curso","text":"<ol> <li>Seleccionar opci\u00f3n 6</li> <li>Ingresar:</li> <li>Nombre del curso</li> <li>A\u00f1o del curso</li> </ol> <p>Ejemplo: <pre><code>Nombre del curso: DAM\nA\u00f1o del curso: 2024\n</code></pre></p>"},{"location":"uso/#gestion-de-calificaciones","title":"Gesti\u00f3n de Calificaciones","text":""},{"location":"uso/#anadir-nota","title":"A\u00f1adir Nota","text":"<ol> <li>Seleccionar opci\u00f3n 9</li> <li>Ingresar:</li> <li>NIF del estudiante</li> <li>ID del curso</li> <li>Calificaci\u00f3n (0-10)</li> </ol> <p>Ejemplo: <pre><code>NIF del estudiante: 12345678A\nID del curso: 1\nValor de la nota (0.0-10.0): 8.5\n</code></pre></p>"},{"location":"uso/#consultas","title":"Consultas","text":""},{"location":"uso/#mostrar-notas-de-estudiante","title":"Mostrar Notas de Estudiante","text":"<ol> <li>Seleccionar opci\u00f3n 8</li> <li>Ingresar NIF del estudiante</li> <li>Se mostrar\u00e1n todas las notas del estudiante en sus diferentes cursos</li> </ol>"},{"location":"uso/#tips-y-consejos","title":"Tips y Consejos","text":"<ol> <li>Antes de a\u00f1adir una nota:</li> <li>Verificar que el estudiante existe (opci\u00f3n 1)</li> <li> <p>Verificar que el curso existe (opci\u00f3n 5)</p> </li> <li> <p>Modificaci\u00f3n de datos:</p> </li> <li> <p>Al modificar estudiantes, puedes dejar campos en blanco para mantener los valores actuales</p> </li> <li> <p>Eliminaci\u00f3n de registros:</p> </li> <li>Aseg\u00farate de no tener dependencias antes de eliminar (por ejemplo, notas asociadas)</li> </ol>"},{"location":"guia-usuario/funcionalidades/","title":"Funcionalidades","text":"<p>El sistema permite realizar las siguientes operaciones desde un men\u00fa en consola:</p>"},{"location":"guia-usuario/funcionalidades/#gestion-de-estudiantes","title":"Gesti\u00f3n de Estudiantes","text":"<ul> <li>Agregar nuevos estudiantes (NIF, nombre, apellidos, c\u00f3digo postal)</li> <li>Modificar informaci\u00f3n de estudiantes existentes</li> <li>Eliminar registros de estudiantes</li> <li>Consultar la lista de estudiantes</li> </ul>"},{"location":"guia-usuario/funcionalidades/#gestion-de-cursos","title":"Gesti\u00f3n de Cursos","text":"<ul> <li>Listar cursos disponibles</li> <li>Insertar nuevos cursos</li> <li>Eliminar cursos existentes</li> </ul>"},{"location":"guia-usuario/funcionalidades/#gestion-de-calificaciones","title":"Gesti\u00f3n de Calificaciones","text":"<ul> <li>Registrar notas para estudiantes en cursos</li> <li>Consultar las notas de un estudiante</li> </ul>"},{"location":"guia-usuario/funcionalidades/#reportes-basicos","title":"Reportes b\u00e1sicos","text":"<ul> <li>Listados de estudiantes y cursos</li> <li>Consulta de notas por estudiante</li> </ul> <p>Todas las acciones se realizan mediante opciones num\u00e9ricas en el men\u00fa principal de la aplicaci\u00f3n.</p>"},{"location":"guia-usuario/introduccion/","title":"Introducci\u00f3n","text":"<p>Bienvenido a la gu\u00eda de usuario del Sistema de Gesti\u00f3n de Estudiantes.</p> <p>Este sistema es una aplicaci\u00f3n de consola desarrollada en Java. Permite gestionar estudiantes, cursos y calificaciones a trav\u00e9s de un men\u00fa interactivo en la terminal. No requiere conocimientos de programaci\u00f3n ni acceso web: todas las operaciones se realizan desde la consola.</p>"},{"location":"guia-usuario/introduccion/#a-quien-va-dirigido","title":"\u00bfA qui\u00e9n va dirigido?","text":"<ul> <li>Personal administrativo de centros educativos</li> <li>Profesores o responsables acad\u00e9micos</li> <li>Usuarios que necesiten gestionar registros acad\u00e9micos de forma sencilla</li> </ul>"},{"location":"references/contributing/","title":"Gu\u00eda de Contribuci\u00f3n","text":""},{"location":"references/contributing/#como-contribuir","title":"C\u00f3mo Contribuir","text":"<ol> <li>Fork del Repositorio</li> <li>Crear un fork del proyecto en GitHub</li> <li> <p>Clonar localmente tu fork</p> </li> <li> <p>Configurar el Entorno de Desarrollo</p> </li> <li>Instalar JDK 21</li> <li>Configurar MySQL y MongoDB</li> <li> <p>Importar el proyecto en tu IDE favorito</p> </li> <li> <p>Convenciones de C\u00f3digo</p> </li> <li>Indentaci\u00f3n: 4 espacios</li> <li>Nomenclatura:<ul> <li>Clases: PascalCase</li> <li>M\u00e9todos y variables: camelCase</li> <li>Constantes: UPPER_SNAKE_CASE</li> </ul> </li> <li>Documentaci\u00f3n: Javadoc en clases y m\u00e9todos p\u00fablicos</li> <li> <p>Idioma: Espa\u00f1ol para nombres de m\u00e9todos y variables</p> </li> <li> <p>Proceso de Desarrollo <pre><code>1. Crear rama feature/nombre-caracteristica\n2. Desarrollar los cambios\n3. Ejecutar pruebas\n4. Commit con mensaje descriptivo\n5. Push a tu fork\n6. Crear Pull Request\n</code></pre></p> </li> <li> <p>Pruebas</p> </li> <li>Crear pruebas unitarias para nuevas funcionalidades</li> <li>Verificar integraci\u00f3n con bases de datos</li> <li>Probar manejo de errores</li> </ol>"},{"location":"references/contributing/#pull-requests","title":"Pull Requests","text":"<ol> <li>Antes de Crear PR</li> <li>[x] C\u00f3digo sigue convenciones</li> <li>[x] Pruebas pasan localmente</li> <li> <p>[x] Documentaci\u00f3n actualizada</p> </li> <li> <p>Informaci\u00f3n en PR</p> </li> <li>Descripci\u00f3n clara del cambio</li> <li>Referencias a issues relacionados</li> <li>Capturas de pantalla (si aplica)</li> </ol>"},{"location":"references/contributing/#reportar-problemas","title":"Reportar Problemas","text":"<p>Al crear un issue, incluir: - Versi\u00f3n del sistema - Pasos para reproducir - Comportamiento esperado vs actual - Logs relevantes</p>"},{"location":"references/contributing/#contacto","title":"Contacto","text":"<p>Para dudas o sugerencias: - Crear un issue en GitHub - Enviar email a: [correo del mantenedor]</p>"},{"location":"references/glossary/","title":"Glosario de T\u00e9rminos","text":""},{"location":"references/glossary/#terminos-del-dominio","title":"T\u00e9rminos del Dominio","text":""},{"location":"references/glossary/#estudiante-student","title":"Estudiante (Student)","text":"<p>Persona registrada en el sistema acad\u00e9mico, identificada por su NIF \u00fanico.</p>"},{"location":"references/glossary/#curso-course","title":"Curso (Course)","text":"<p>Unidad acad\u00e9mica que representa una materia o asignatura espec\u00edfica.</p>"},{"location":"references/glossary/#calificacion-studentgrade","title":"Calificaci\u00f3n (StudentGrade)","text":"<p>Evaluaci\u00f3n num\u00e9rica del desempe\u00f1o de un estudiante en un curso espec\u00edfico.</p>"},{"location":"references/glossary/#terminos-tecnicos","title":"T\u00e9rminos T\u00e9cnicos","text":""},{"location":"references/glossary/#dao-data-access-object","title":"DAO (Data Access Object)","text":"<p>Patr\u00f3n de dise\u00f1o que proporciona una interfaz abstracta a alg\u00fan tipo de base de datos o mecanismo de persistencia.</p>"},{"location":"references/glossary/#jdbc-java-database-connectivity","title":"JDBC (Java Database Connectivity)","text":"<p>API de Java que permite la ejecuci\u00f3n de operaciones sobre bases de datos desde Java.</p>"},{"location":"references/glossary/#preparedstatement","title":"PreparedStatement","text":"<p>Objeto JDBC que representa una sentencia SQL precompilada, \u00fatil para prevenir inyecci\u00f3n SQL.</p>"},{"location":"references/glossary/#mongodb","title":"MongoDB","text":"<p>Base de datos NoSQL orientada a documentos, utilizada en este proyecto para almacenar logs.</p>"},{"location":"references/glossary/#lombok","title":"Lombok","text":"<p>Biblioteca Java que automatiza la generaci\u00f3n de getters, setters, constructores y otros m\u00e9todos boilerplate.</p>"},{"location":"references/glossary/#acronimos-comunes","title":"Acr\u00f3nimos Comunes","text":"<ul> <li>NIF: N\u00famero de Identificaci\u00f3n Fiscal</li> <li>SQL: Structured Query Language</li> <li>JDK: Java Development Kit</li> <li>JRE: Java Runtime Environment</li> <li>API: Application Programming Interface</li> <li>CRUD: Create, Read, Update, Delete</li> </ul>"},{"location":"tech/api/","title":"API interna (clases y m\u00e9todos)","text":"<p>Este sistema no expone una API REST. La interacci\u00f3n se realiza mediante un men\u00fa en consola y llamadas a m\u00e9todos Java.</p>"},{"location":"tech/api/#clases-principales","title":"Clases principales","text":"<ul> <li>StudentDAO: M\u00e9todos para listar, insertar, eliminar, modificar y consultar estudiantes.</li> <li>CourseDAO: M\u00e9todos para listar, insertar, eliminar y consultar cursos.</li> <li>StudentGradeDAO: M\u00e9todos para insertar y consultar calificaciones.</li> </ul>"},{"location":"tech/api/#ejemplo-de-uso-de-metodos-dao","title":"Ejemplo de uso de m\u00e9todos DAO","text":"<pre><code>// Listar estudiantes\nList&lt;Student&gt; estudiantes = studentDAO.listarEstudiantes();\n\n// Insertar un curso\nCourse nuevoCurso = new Course(0, \"DAM\", 2024);\ncourseDAO.insertarCurso(nuevoCurso);\n\n// A\u00f1adir nota\nStudentGrade nota = new StudentGrade(\"1X\", 1, 8.5);\nstudentGradeDAO.insertarNota(nota);\n</code></pre>"},{"location":"tech/api/#menu-de-consola","title":"Men\u00fa de consola","text":"<p>El usuario puede: - Listar, insertar, eliminar y modificar estudiantes - Listar, insertar y eliminar cursos - Mostrar y a\u00f1adir notas</p> <p>No existen endpoints HTTP ni recursos REST.</p>"},{"location":"tech/arquitectura/","title":"Arquitectura","text":"<p>El sistema sigue una arquitectura basada en el patr\u00f3n DAO (Data Access Object) para separar la l\u00f3gica de acceso a datos de la l\u00f3gica de negocio. No utiliza frameworks como Spring Boot ni expone endpoints REST.</p>"},{"location":"tech/arquitectura/#componentes-principales","title":"Componentes principales","text":"<ul> <li>Main.java: Punto de entrada. Presenta un men\u00fa interactivo en consola para gestionar estudiantes, cursos y notas.</li> <li>DAO: Interfaces y clases de acceso a datos para estudiantes, cursos y calificaciones, implementadas con JDBC.</li> <li>Modelos: Clases Java simples (<code>Student</code>, <code>Course</code>, <code>StudentGrade</code>) que representan las entidades del sistema.</li> <li>Utilidades: Clases para la conexi\u00f3n a MySQL (<code>DatabaseConnection</code>) y para el registro de logs en MongoDB (<code>MongoLogger</code>).</li> </ul>"},{"location":"tech/arquitectura/#diagrama-de-paquetes","title":"Diagrama de paquetes","text":"<pre><code>org.ivan\n\u251c\u2500\u2500 Main.java\n\u251c\u2500\u2500 dao\n\u2502   \u251c\u2500\u2500 StudentDAO.java / StudentDAOImpl.java\n\u2502   \u251c\u2500\u2500 CourseDAO.java / CourseDAOImpl.java\n\u2502   \u2514\u2500\u2500 StudentGradeDAO.java / StudentGradeDAOImpl.java\n\u251c\u2500\u2500 model\n\u2502   \u251c\u2500\u2500 Student.java\n\u2502   \u251c\u2500\u2500 Course.java\n\u2502   \u2514\u2500\u2500 StudentGrade.java\n\u2514\u2500\u2500 util\n    \u251c\u2500\u2500 DatabaseConnection.java\n    \u2514\u2500\u2500 MongoLogger.java\n</code></pre>"},{"location":"tech/arquitectura/#flujo-de-ejecucion","title":"Flujo de ejecuci\u00f3n","text":"<ol> <li>El usuario interact\u00faa con el men\u00fa en consola.</li> <li>Se invocan m\u00e9todos DAO para realizar operaciones sobre la base de datos MySQL.</li> <li>Las operaciones relevantes generan logs en MongoDB.</li> </ol>"},{"location":"tech/arquitectura/#ejemplo-de-uso","title":"Ejemplo de uso","text":"<pre><code>Student nuevo = new Student(\"1X\", \"Bob\", \"Esponja\", 28000);\nstudentDAO.insertarEstudiante(nuevo);\n</code></pre>"},{"location":"tech/database/","title":"Base de Datos","text":"<p>El sistema utiliza MySQL para almacenar la informaci\u00f3n acad\u00e9mica y MongoDB para logs.</p>"},{"location":"tech/database/#estructura-de-base-de-datos-mysql","title":"Estructura de Base de Datos MySQL","text":""},{"location":"tech/database/#tablas-principales","title":"Tablas principales","text":"<ul> <li><code>student</code> (nif, name, surname, zipCode)</li> <li><code>course</code> (id, name, course_year)</li> <li><code>student_grade</code> (nif, course_id, grade)</li> </ul>"},{"location":"tech/database/#script-de-creacion","title":"Script de creaci\u00f3n","text":"<pre><code>CREATE TABLE student(\n    nif VARCHAR(10) PRIMARY KEY,\n    name VARCHAR(30) NOT NULL,\n    surname VARCHAR(30) NOT NULL,\n    zipCode INT NOT NULL\n);\n\nCREATE TABLE course(\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(100),\n    course_year INT\n);\n\nCREATE TABLE student_grade(\n    nif VARCHAR(10) NOT NULL,\n    course_id INT NOT NULL,\n    grade INT NOT NULL,\n    PRIMARY KEY(nif, course_id),\n    FOREIGN KEY (nif) REFERENCES student(nif),\n    FOREIGN KEY (course_id) REFERENCES course(id)\n);\n</code></pre>"},{"location":"tech/database/#ejemplo-de-consulta-sql","title":"Ejemplo de consulta SQL","text":"<pre><code>SELECT name, surname FROM student WHERE zipCode = 28000;\n</code></pre>"},{"location":"tech/database/#logs-en-mongodb","title":"Logs en MongoDB","text":"<p>Cada operaci\u00f3n relevante genera un documento en la colecci\u00f3n <code>logs</code> de la base <code>application_logs</code>.</p>"},{"location":"tech/performance/","title":"Rendimiento y Requisitos del Sistema","text":""},{"location":"tech/performance/#requisitos-minimos-del-sistema","title":"Requisitos M\u00ednimos del Sistema","text":""},{"location":"tech/performance/#hardware","title":"Hardware","text":"<ul> <li>Procesador: Dual-core 2GHz o superior</li> <li>Memoria RAM: 2GB m\u00ednimo, 4GB recomendado</li> <li>Espacio en disco: 500MB para la aplicaci\u00f3n y bases de datos</li> </ul>"},{"location":"tech/performance/#software","title":"Software","text":"<ul> <li>Sistema Operativo: Windows/Linux/MacOS</li> <li>Java Runtime Environment (JRE) 21 o superior</li> <li>MySQL 8.0 o superior</li> <li>MongoDB 4.4 o superior</li> </ul>"},{"location":"tech/performance/#metricas-de-rendimiento","title":"M\u00e9tricas de Rendimiento","text":""},{"location":"tech/performance/#operaciones-de-base-de-datos","title":"Operaciones de Base de Datos","text":"Operaci\u00f3n Tiempo Promedio M\u00e1ximo Aceptable Listar estudiantes (100 registros) &lt;100ms 500ms Insertar estudiante &lt;50ms 200ms Consultar notas &lt;150ms 600ms"},{"location":"tech/performance/#uso-de-recursos","title":"Uso de Recursos","text":"<ul> <li>Memoria heap: 256MB m\u00e1ximo</li> <li>Conexiones simult\u00e1neas a MySQL: 10 m\u00e1ximo</li> <li>Tama\u00f1o de logs en MongoDB: ~1MB por d\u00eda de uso intensivo</li> </ul>"},{"location":"tech/performance/#optimizaciones-implementadas","title":"Optimizaciones Implementadas","text":"<ol> <li>Pooling de Conexiones</li> <li>Reutilizaci\u00f3n de conexiones a bases de datos</li> <li> <p>L\u00edmite m\u00e1ximo de conexiones configurado</p> </li> <li> <p>Consultas Optimizadas</p> </li> <li>\u00cdndices en campos clave (NIF, course_id)</li> <li> <p>Consultas preparadas (PreparedStatement)</p> </li> <li> <p>Gesti\u00f3n de Memoria</p> </li> <li>Cierre adecuado de recursos (try-with-resources)</li> <li>Liberaci\u00f3n de conexiones despu\u00e9s de uso</li> </ol>"},{"location":"tech/performance/#recomendaciones-de-uso","title":"Recomendaciones de Uso","text":"<ol> <li>Para mejor rendimiento:</li> <li>Mantener \u00edndices de MySQL actualizados</li> <li>Limpiar logs antiguos de MongoDB peri\u00f3dicamente</li> <li> <p>Reiniciar la aplicaci\u00f3n cada 24 horas de uso continuo</p> </li> <li> <p>Mantenimiento:</p> </li> <li>Backup diario de la base de datos MySQL</li> <li>Monitoreo del espacio de logs en MongoDB</li> <li> <p>Actualizaci\u00f3n regular de JRE y dependencias</p> </li> <li> <p>Escalabilidad:</p> </li> <li>Soporta hasta 1000 estudiantes sin degradaci\u00f3n</li> <li>Hasta 50 cursos simult\u00e1neos</li> <li>Historial de notas ilimitado</li> </ol>"},{"location":"tech/testing/","title":"Pruebas del Sistema","text":""},{"location":"tech/testing/#estructura-de-pruebas","title":"Estructura de Pruebas","text":"<p>El proyecto utiliza pruebas unitarias y de integraci\u00f3n para asegurar la calidad del c\u00f3digo.</p>"},{"location":"tech/testing/#pruebas-unitarias-recomendadas","title":"Pruebas Unitarias Recomendadas","text":"<ol> <li> <p>DAOs <pre><code>@Test\nvoid testInsertarEstudiante() {\n    Student estudiante = new Student(\"1X\", \"Test\", \"User\", 28001);\n    assertTrue(studentDAO.insertarEstudiante(estudiante));\n}\n</code></pre></p> </li> <li> <p>Modelos <pre><code>@Test\nvoid testStudentModel() {\n    Student student = new Student(\"2X\", \"Test\", \"User\", 28002);\n    assertEquals(\"2X\", student.getNif());\n    assertEquals(\"Test\", student.getName());\n}\n</code></pre></p> </li> </ol>"},{"location":"tech/testing/#cobertura-de-codigo-objetivo","title":"Cobertura de C\u00f3digo Objetivo","text":"Componente Cobertura M\u00ednima Models 95% DAOs 85% Utils 80%"},{"location":"tech/testing/#configuracion-de-pruebas","title":"Configuraci\u00f3n de Pruebas","text":""},{"location":"tech/testing/#base-de-datos-de-prueba","title":"Base de Datos de Prueba","text":"<pre><code>CREATE DATABASE highschool_test;\nUSE highschool_test;\n-- Usar el mismo esquema que en producci\u00f3n\n</code></pre>"},{"location":"tech/testing/#mongodb-de-prueba","title":"MongoDB de Prueba","text":"<pre><code>use application_logs_test\ndb.createUser({\n  user: \"testLogger\",\n  pwd: \"test_password\",\n  roles: [{ role: \"readWrite\", db: \"application_logs_test\" }]\n})\n</code></pre>"},{"location":"tech/testing/#ejecucion-de-pruebas","title":"Ejecuci\u00f3n de Pruebas","text":"<pre><code># Ejecutar todas las pruebas\nmvn test\n\n# Ejecutar pruebas de un paquete espec\u00edfico\nmvn test -Dtest=\"org.ivan.dao.*Test\"\n</code></pre>"},{"location":"tech/testing/#buenas-practicas","title":"Buenas Pr\u00e1cticas","text":"<ol> <li>Aislar pruebas de base de datos</li> <li>Limpiar datos despu\u00e9s de cada prueba</li> <li>Usar datos de prueba predecibles</li> <li>Documentar casos de prueba</li> </ol>"},{"location":"tech/uml/","title":"Diagramas UML","text":""},{"location":"tech/uml/#diagrama-de-clases","title":"Diagrama de Clases","text":"<pre><code>classDiagram\n    class Student {\n        -String nif\n        -String name\n        -String surname\n        -int zipCode\n        +getNif()\n        +setNif(String)\n        +getName()\n        +setName(String)\n        +getSurname()\n        +setSurname(String)\n        +getZipCode()\n        +setZipCode(int)\n    }\n\n    class Course {\n        -int id\n        -String name\n        -int course_year\n        +getId()\n        +setId(int)\n        +getName()\n        +setName(String)\n        +getCourse_year()\n        +setCourse_year(int)\n    }\n\n    class StudentGrade {\n        -String nif\n        -int courseId\n        -double grade\n        +getNif()\n        +setNif(String)\n        +getCourseId()\n        +setCourseId(int)\n        +getGrade()\n        +setGrade(double)\n    }\n\n    class StudentDAO {\n        &lt;&lt;interface&gt;&gt;\n        +listarEstudiantes()\n        +insertarEstudiante(Student)\n        +eliminarEstudiante(String)\n        +modificarEstudiante(Student)\n        +obtenerEstudiantePorNif(String)\n    }\n\n    class CourseDAO {\n        &lt;&lt;interface&gt;&gt;\n        +listarCursos()\n        +insertarCurso(Course)\n        +eliminarCurso(int)\n        +obtenerCursoPorId(int)\n    }\n\n    class StudentGradeDAO {\n        &lt;&lt;interface&gt;&gt;\n        +insertarNota(StudentGrade)\n        +mostrarNotasDeEstudiante(String)\n    }\n\n    StudentGrade --&gt; Student : references\n    StudentGrade --&gt; Course : references\n    StudentDAO ..&gt; Student : uses\n    CourseDAO ..&gt; Course : uses\n    StudentGradeDAO ..&gt; StudentGrade : uses</code></pre>"},{"location":"tech/uml/#diagrama-de-componentes","title":"Diagrama de Componentes","text":"<pre><code>graph TB\n    subgraph UI[Interfaz de Usuario]\n        Menu[Men\u00fa Principal]\n    end\n\n    subgraph BL[L\u00f3gica de Negocio]\n        DAO[DAOs]\n        Models[Modelos]\n    end\n\n    subgraph DB[Bases de Datos]\n        MySQL[(MySQL)]\n        MongoDB[(MongoDB Logs)]\n    end\n\n    Menu --&gt; DAO\n    DAO --&gt; Models\n    DAO --&gt; MySQL\n    DAO --&gt; MongoDB</code></pre>"},{"location":"tech/uml/#diagrama-de-secuencia-insertar-estudiante","title":"Diagrama de Secuencia: Insertar Estudiante","text":"<pre><code>sequenceDiagram\n    actor User\n    participant Main\n    participant StudentDAO\n    participant DB\n    participant Logger\n\n    User-&gt;&gt;Main: Selecciona \"Insertar Estudiante\"\n    Main-&gt;&gt;Main: Solicita datos\n    User-&gt;&gt;Main: Ingresa datos\n    Main-&gt;&gt;StudentDAO: insertarEstudiante(student)\n    StudentDAO-&gt;&gt;DB: Ejecuta INSERT\n    DB--&gt;&gt;StudentDAO: Resultado\n    StudentDAO-&gt;&gt;Logger: Registra operaci\u00f3n\n    StudentDAO--&gt;&gt;Main: Retorna resultado\n    Main--&gt;&gt;User: Muestra mensaje \u00e9xito/error</code></pre>"}]}